name: Create release
on:
  pull_request:
    branches:
      - release-**
    types: [ closed ]

permissions:
  contents: write
  packages: write
  actions: read
  pull-requests: read

env:
  REGISTRY: ghcr.io
  # Common versions
  GO_VERSION: '1.20'

jobs:
  create-release:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'update manifest and helm charts')
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION  }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - id: get-tag
        name: Get tag
        run: |
          echo "tag=$(echo ${{ github.event.pull_request.head.ref }} | tr '-' '\n' | grep 'v[0-9]\.[0-9]\.[0-9]' | head -n 1)" >> $GITHUB_OUTPUT

      - id: check-tag
        name: Check for Tag
        run: |
          TAG=$(echo ${{ github.event.pull_request.head.ref }} | tr '-' '\n' | grep 'v[0-9]\.[0-9]\.[0-9]' | head -n 1)" >> $GITHUB_OUTPUT

          if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
            echo "create_tag=$(echo 'false' )" >> $GITHUB_OUTPUT
          else
            echo "create_tag=$(echo 'true' )" >> $GITHUB_OUTPUT
          fi

      - name: 'Create tag'
        if: steps.check-tag.outputs.create_tag == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.get-tag.outputs.tag }}',
              sha: context.sha
            })

      - name: Goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --rm-dist --timeout 60m --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  export-registry:
    runs-on: ubuntu-latest
    needs:
      - create-release
    outputs:
      registry: ${{ steps.export.outputs.registry }}
    steps:
      - id: export
        run: |
          # registry must be in lowercase
          echo "::set-output name=registry::$(echo "${{ env.REGISTRY }}/${{ github.repository }}" | tr [:upper:] [:lower:])"

  publish-image:
    needs: [export-registry]
    uses: ./.github/workflows/publish-image.yml
    with:
      registry: ${{ needs.export-registry.outputs.registry }}
      release_version: echo ${{ github.event.pull_request.head.ref }} | tr '-' '\n' | grep 'v[0-9]\.[0-9]\.[0-9]' | head -n 1

  publish-init-validation-image:
    needs: [export-registry]
    uses: ./.github/workflows/publish-init-container-image.yml
    with:
      registry: ${{ needs.export-registry.outputs.registry }}
      init_container_version: echo ${{ github.event.pull_request.head.ref }} | tr '-' '\n' | grep 'v[0-9]\.[0-9]\.[0-9]' | sed -n '2p'
